{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/http.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"h1{\\n    text-align: center;\\n}\\ndiv.submitacake{\\n    display: inline-block;\\n    margin: 0px 35%;\\n}\\ndiv.submitacake h3{\\n        text-align: center;\\n    }\\ndiv.scrollable{\\n    display: inline-block;\\n    width: 49%;\\n    height: 650px;\\n    overflow-y: auto;\\n    vertical-align: top;\\n    outline: 2px solid salmon;\\n}\\ndiv.allcakes{\\n        display: inline-block;\\n        margin-left: 20px;\\n    }\\ndiv.selectedcake{\\n    display: inline-block;\\n    padding: 10px;\\n    width: 45%;\\n    vertical-align: top;\\n    outline: 2px solid green;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7QUFDdEI7QUFDQTtJQUNJLHFCQUFxQjtJQUNyQixlQUFlO0FBQ25CO0FBQ0k7UUFDSSxrQkFBa0I7SUFDdEI7QUFDSjtJQUNJLHFCQUFxQjtJQUNyQixVQUFVO0lBQ1YsYUFBYTtJQUNiLGdCQUFnQjtJQUNoQixtQkFBbUI7SUFDbkIseUJBQXlCO0FBQzdCO0FBQ0k7UUFDSSxxQkFBcUI7UUFDckIsaUJBQWlCO0lBQ3JCO0FBQ0o7SUFDSSxxQkFBcUI7SUFDckIsYUFBYTtJQUNiLFVBQVU7SUFDVixtQkFBbUI7SUFDbkIsd0JBQXdCO0FBQzVCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJoMXtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5kaXYuc3VibWl0YWNha2V7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIG1hcmdpbjogMHB4IDM1JTtcbn1cbiAgICBkaXYuc3VibWl0YWNha2UgaDN7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB9XG5kaXYuc2Nyb2xsYWJsZXtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IDQ5JTtcbiAgICBoZWlnaHQ6IDY1MHB4O1xuICAgIG92ZXJmbG93LXk6IGF1dG87XG4gICAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgICBvdXRsaW5lOiAycHggc29saWQgc2FsbW9uO1xufVxuICAgIGRpdi5hbGxjYWtlc3tcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBtYXJnaW4tbGVmdDogMjBweDtcbiAgICB9XG5kaXYuc2VsZWN0ZWRjYWtle1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIHdpZHRoOiA0NSU7XG4gICAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgICBvdXRsaW5lOiAycHggc29saWQgZ3JlZW47XG59XG4iXX0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <hr>\\n  <h1>Rate My Cakes</h1>\\n  <hr>\\n  <div class=\\\"submitacake\\\">\\n    <h3>Submit a cake to be rated</h3>\\n    <form (submit)=\\\"onSubmitCake()\\\">\\n      <!-- <p>{{newCake | json}}</p> -->\\n      <label>Baker name:\\n        <input type=\\\"text\\\" name=\\\"newCake.name\\\" [(ngModel)]=\\\"newCake.name\\\" />\\n      </label>\\n      <label>Image URL:\\n        <input type=\\\"text\\\" name=\\\"newCake.image\\\" [(ngModel)]=\\\"newCake.image\\\" />\\n      </label>\\n      <input type=\\\"submit\\\" value=\\\"Submit\\\" />\\n    </form>\\n  </div>\\n  <hr>\\n  <div class=\\\"scrollable\\\">\\n    <div class=\\\"allcakes\\\" *ngFor=\\\"let cake of cakes\\\">\\n      <!-- Have each image make all the reviews for that cake show up  -->\\n      <img (click)=\\\"getThisCakeFromService(cake)\\\" [src]=\\\"cake.image\\\" alt=\\\"image_url_broken\\\" width=\\\"500px\\\">\\n      <form (submit)=\\\"onSubmitReview(cake)\\\">\\n        <!-- <p>{{newReview | json}}</p> -->\\n        <label>Rating:\\n          <select name=\\\"newReview.rating\\\" [(ngModel)]=\\\"newReview.rating\\\" >\\n            <option value=\\\"5\\\">5 Stars</option>\\n            <option value=\\\"4\\\">4 Stars</option>\\n            <option value=\\\"3\\\">3 Stars</option>\\n            <option value=\\\"2\\\">2 Stars</option>\\n            <option value=\\\"1\\\">1 Stars</option>\\n          </select>\\n        </label><br>\\n        <label>Comment:\\n          <input type=\\\"text\\\" name=\\\"newReview.comment\\\" [(ngModel)]=\\\"newReview.comment\\\" />\\n        </label>\\n        <input type=\\\"submit\\\" value=\\\"Submit\\\" />\\n      </form>\\n      <br>\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"showThisCake\\\" class=\\\"selectedcake\\\">\\n    <h2>Baked by {{thisCake.name}}</h2>\\n    <img [src]=\\\"thisCake.image\\\" alt=\\\"image_url_broken\\\" width=\\\"300px\\\">\\n    <h2>Average Rating: {{avgRating}}</h2>\\n    <div *ngFor=\\\"let review of reviews\\\">\\n      <h3>{{review.comment}}</h3>\\n      <h3>{{review.rating}} stars</h3>\\n    </div>\\n  </div>\\n</div>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './http.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  cakes = [];\n  reviews = [];\n  thisCake: any;\n  showThisCake: boolean;\n  newCake: any;\n  newReview: any;\n  avgRating: number;\n\n  constructor(private _httpService: HttpService){\n  }\n  ngOnInit(){\n    this.getCakesFromService();\n    this.showThisCake = false;\n    this.newCake = {name: \"\", image: \"\"};\n    this.newReview = {cake_id: \"\", rating: null, comment: \"\"};\n    this.thisCake = {};\n    this.avgRating = null;\n  }\n  getCakesFromService(){\n    let observable = this._httpService.getCakes();\n    observable.subscribe(data => {\n      console.log(\"Got all the cake data!\", data);\n      this.cakes = data[\"data\"];\n    });\n  }\n  getThisCakeFromService(cake){\n    this.showThisCake = true;\n    this.thisCake = cake;\n    this.reviews = this.thisCake.reviews;\n    this.getReviewsFromService(cake);\n  }\n  onSubmitCake(){\n    let observable = this._httpService.addCake(this.newCake);\n    observable.subscribe(data => {\n      console.log(\"Got cake data from post back\", data);\n      this.newCake = {name: \"\", image: \"\"};\n      this.getCakesFromService();\n    });\n  }\n  getReviewsFromService(thisCake){\n    let observable = this._httpService.getReviews(thisCake);\n    observable.subscribe(data => {\n      console.log(\"Got all the review data!\", data);\n      this.reviews = data[\"data\"][0].reviews;\n      //console.log(this.reviews);\n      var totalRating = 0;\n      for (var i = 0; i < this.reviews.length; i++){\n        totalRating += this.reviews[i].rating;\n      }\n      this.avgRating = totalRating / this.reviews.length; \n    });\n  }\n  onSubmitReview(cake){\n    this.newReview.cake_id = cake._id;\n    let observable = this._httpService.addReview(this.newReview);\n    observable.subscribe(data => {\n      console.log(\"Got review data from post back\", data);\n      this.getReviewsFromService(cake);\n      this.newReview = {cake_id: \"\", rating: null, comment: \"\"};\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { HttpService } from './http.service';\nimport { HttpClientModule } from '@angular/common/http'\n\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class HttpService {\n\n  constructor(private _http: HttpClient) {\n  }\n  getCakes(){\n    return this._http.get(\"/cakes\");\n  }\n  showCake(){\n    return this._http.get(\"/cakes/show\");\n  }\n  addCake(newCake){\n    return this._http.post(\"/cakes/new\", newCake);\n  }\n  getReviews(thisCake){\n    console.log(thisCake);\n    return this._http.get(\"/reviews/\" + thisCake._id);\n  }\n  addReview(newReview){\n    return this._http.post(\"/reviews/new\", newReview);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}